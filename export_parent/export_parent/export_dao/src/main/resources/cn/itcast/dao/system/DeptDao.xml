<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--对哪个接口进行映射-->
<mapper namespace="cn.itcast.dao.system.DeptDao">
    <!--建立列与对象属性的映射关系-->
    <resultMap id="BaseResultMap" type="cn.itcast.domain.system.Dept">
        <result column="dept_id" property="id"/>
        <result column="dept_name" property="deptName"/>
        <result column="state" property="state"/>
        <result column="company_id" property="companyId"/>
        <result column="company_name" property="companyName"/>
        <!--给Dept对象关联的parent属性封装数据-->
        <!--
            association 一对一关联查询映射
                property 关联的对象属性，也是要封装的对象
                column   外键字段, 如果配置了select会自动作为select语句的参数
                javaType 关联的对象属性的类型
                select   根据部门id查询部门对象，然后把查询结果设置到property对象属性中。
        -->
        <association
                property="parent"
                column="parent_id"
                javaType="cn.itcast.domain.system.Dept"
                select="cn.itcast.dao.system.DeptDao.findById"
        />
    </resultMap>

    <select id="findAll" resultMap="BaseResultMap">
        SELECT * FROM pe_dept WHERE company_id=#{companyId}
    </select>

    <select id="findById" resultMap="BaseResultMap">
         SELECT * FROM pe_dept WHERE dept_id=#{id}
    </select>

    <insert id="save">
        insert into pe_dept
        (
            dept_id,
            dept_name,
            parent_id,
            state,
            company_id,
            company_name
        )
        values
        (
            #{id},
            #{deptName},
            <choose>
                <when test="parent != null and parent.id != ''">
                    #{parent.id},
                </when>
                <otherwise>NULL,</otherwise>
            </choose>
            #{state},
            #{companyId},
            #{companyName}
        )
    </insert>

    <update id="update">
        update pe_dept set
            dept_name=#{deptName},
            <choose>
                <when test="parent != null and parent.id != ''">
                    parent_id=#{parent.id},
                </when>
                <otherwise>
                    parent_id=NULL,
                </otherwise>
            </choose>
            state=#{state},
            company_id=#{companyId},
            company_name=#{companyName}
        where dept_id=#{id}
    </update>

    <select id="findDeptByParentId" resultType="long">
        SELECT count(1) FROM pe_dept WHERE parent_id=#{id}
    </select>

    <delete id="delete">
        DELETE FROM pe_dept WHERE dept_id=#{id}
    </delete>
</mapper>












